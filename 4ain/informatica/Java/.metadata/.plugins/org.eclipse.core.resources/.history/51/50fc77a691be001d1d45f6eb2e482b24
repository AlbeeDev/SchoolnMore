import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

@SuppressWarnings("serial")
public class GamePanel extends JPanel{
	File[] lista = new File("src/flags").listFiles();
	File cfile= lista[new Random().nextInt(lista.length)];
	BufferedImage cflag=getFlag(cfile);
	String cname=cfile.getName();
	BufferedImage blank=new BufferedImage(600, 300, BufferedImage.TYPE_INT_RGB);
	Image blank;
	MioAscoltatore al;
	public GamePanel(Image flag) {
		this.blank=flag;
		initBlank(blank);
		setBounds(150,100,600,300);
		
		JTextField tf = new JTextField();
		tf.setBounds(150, 500, 600, 50);
		tf.setBackground(Color.white);
		tf.setFont(new Font("",Font.BOLD,30));
		add(tf);

		JComboBox<String> cb = new JComboBox<String>();
		for(File file:lista){
			cb.addItem(file.getName().replaceFirst("[.][^.]+$", ""));
		}
		cb.setFont(new Font("",Font.BOLD,40));
		cb.setBounds(150,550,500,100);
		cb.setEditable(false);
		cb.setBackground(Color.lightGray);
		add(cb);
		
		JButton b = new JButton();
		b.setBounds(650,550,100,100);
		b.setBackground(Color.LIGHT_GRAY);
		b.setFont(new Font("",Font.BOLD,60));
		b.setText("5");
		add(b);
		
		MioAscoltatore al = new MioAscoltatore(cb, blank,cflag, cname, this);	
		b.addActionListener(al);

		tf.getDocument().addDocumentListener(new DocumentListener() {

			@Override
			public void changedUpdate(DocumentEvent arg0) {
				
			}

			@Override
			public void insertUpdate(DocumentEvent arg0) {
				filter();
			}

			@Override
			public void removeUpdate(DocumentEvent arg0) {
				filter();
			}

			void filter(){
				cb.removeAllItems();;
				for(File file:lista){
					if(file.getName().contains(tf.getText())){
						cb.addItem(file.getName().replaceFirst("[.][^.]+$", ""));
					}
				}
			}
			
		});
	}
	
	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		g.drawImage(blank.getScaledInstance(600, 300,Image.SCALE_FAST), 0, 0, null);
		int width = getWidth();
        int height = getHeight();
		g.setColor(Color.white);
		g.drawRect(0, 0, width-1, height-1);
		g.setColor(Color.black);
		g.drawRect(1, 1, width-3, height-3);
		g.drawRect(2, 2, width-5, height-5);
		g.drawRect(3, 3, width-7, height-7);
		g.drawRect(4, 4, width-9, height-9);
	}
	
	void setflag(Image flag) {
		this.blank=flag;
	}
	
	BufferedImage getFlag(File flagf) {
		
		System.out.println(flagf.getName());
		try {
			return ImageIO.read(flagf);
			
		} catch (IOException e) {}
		return null;
	}

	void initBlank(BufferedImage blank) {
		Color gray = new Color(170,170,170);
		for(int y=0;y<300;y++) {
			for(int x=0;x<600;x++) {
				blank.setRGB(x, y, gray.getRGB());
			}
		}
	}
}