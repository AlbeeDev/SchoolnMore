import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.File;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;

@SuppressWarnings("serial")
public class SettingsPanel extends JPanel{
	String theme = "light";
	String seldiff = "medium";
	Color bg= Color.DARK_GRAY;
	JFrame frame;
	JButton home;
	JLabel username;
	JTextField userfield;
	JLabel difficulty;
	JButton easy;
	JButton medium;
	JButton hard;
	JLabel fullscreen;
	JCheckBox fscheck;
	JLabel background;
	JButton dark;
	JButton light;
	JButton save;
	
	public SettingsPanel(JFrame framef) {
		this.frame=framef;
		setBounds(0,0,frame.getContentPane().getWidth()-100,frame.getContentPane().getHeight());
		setBackground(bg);
		setLayout(null);
		
		home = new JButton();
		home.setBounds(0,0,200,50);
		home.setBackground(bg);
		home.setBorderPainted(false);
		home.setFocusPainted(false);
		home.setText("< Main Menu");
		home.setFont(new Font("",Font.PLAIN,20));
		home.setHorizontalAlignment(JLabel.LEFT);
		home.setForeground(Color.white);
		add(home);
		
		ActionListener menu = new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				setVisible(false);
				MainPanel main = new MainPanel(frame);
				frame.add(main);
			}
		};
		
		home.addActionListener(menu);
		
		username = new JLabel();
		username.setText("Username:");
		username.setHorizontalAlignment(JLabel.RIGHT);
		username.setBounds(200,200,150,50);
		username.setForeground(Color.white);
		username.setFont(new Font("",Font.PLAIN,20));
		add(username);
		
		userfield = new JTextField();
		userfield.setBounds(375,200,300,50);
		userfield.setText("user");
		userfield.setFont(new Font("",Font.PLAIN,20));
		add(userfield);
		
		difficulty = new JLabel();
		difficulty.setText("Difficulty:");
		difficulty.setHorizontalAlignment(JLabel.RIGHT);
		difficulty.setBounds(200,300,150,50);
		difficulty.setForeground(Color.white);
		difficulty.setFont(new Font("",Font.PLAIN,20));
		add(difficulty);
		
		easy = new JButton();
		easy.setText("easy");
		easy.setActionCommand(easy.getText());
		easy.setBounds(375,300,100,50);
		easy.setBackground(Color.white);
		easy.setForeground(Color.black);
		add(easy);
		
		medium = new JButton();
		medium.setText("medium");
		medium.setActionCommand(medium.getText());
		medium.setBounds(475,300,100,50);
		medium.setBackground(Color.orange);
		medium.setForeground(Color.black);
		add(medium);
		
		hard = new JButton();
		hard.setText("hard");
		hard.setActionCommand(hard.getText());
		hard.setBounds(575,300,100,50);
		hard.setBackground(Color.white);
		hard.setForeground(Color.black);
		add(hard);
		
		ActionListener diff = new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				JButton b = (JButton) e.getSource();
				
				
				if(!b.getActionCommand().equals(seldiff)) {
					seldiff=b.getActionCommand();
					if(theme.equals("light")) {
						easy.setBackground(Color.white);
						medium.setBackground(Color.white);
						hard.setBackground(Color.white);
						easy.setForeground(Color.black);
						medium.setForeground(Color.black);
						hard.setForeground(Color.black);
					}
					else {
						easy.setBackground(Color.darkGray);
						medium.setBackground(Color.darkGray);
						hard.setBackground(Color.darkGray);
						easy.setForeground(Color.white);
						medium.setForeground(Color.white);
						hard.setForeground(Color.white);
					}
					
					if(seldiff.equals("easy")) {
						easy.setBackground(Color.green);
					}
					else if(seldiff.equals("hard")) {
						hard.setBackground(Color.red);
					}
					else {
						medium.setBackground(Color.orange);
					}
				}
				
			}
		};
		
		easy.addActionListener(diff);
		medium.addActionListener(diff);
		hard.addActionListener(diff);
		
		fullscreen = new JLabel();
		fullscreen.setText("Fullscreen:");
		fullscreen.setHorizontalAlignment(JLabel.RIGHT);
		fullscreen.setBounds(200,400,150,50);
		fullscreen.setForeground(Color.white);
		fullscreen.setFont(new Font("",Font.PLAIN,20));
		add(fullscreen);
		
		fscheck= new JCheckBox();
		fscheck.setBounds(375,400,100,50);
		fscheck.setForeground(Color.white);
		fscheck.setSelected(false);
		fscheck.setBackground(Color.lightGray);
		add(fscheck);
		
		ChangeListener checker = new ChangeListener() {
			
			@Override
			public void stateChanged(ChangeEvent e) {
				
				if(fscheck.isSelected()) {
					frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
				}
				else {
					frame.setExtendedState(JFrame.NORMAL);
				}
				
			}
		};
		
		fscheck.addChangeListener(checker);
		
		save=new JButton();
		save.setBackground(Color.green);
		save.setText("Save changes");
		save.setFont(new Font("",Font.BOLD,20));
		add(save);
		
		ActionListener saver = new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				//write to json
				/*
				ObjectMapper om = new ObjectMapper();
				try {
					UserData data = om.readValue(new File("src/loader.json"), UserData.class);
					System.out.println("test version: "+data.getVersion());
					
				} catch (Exception e1) {
					e1.printStackTrace();
				}
				*/
				File file = new File("loader.json");
		        if (file.exists()) {
		            System.out.println("File exists!");
		            try {
		                System.out.println("File path: " + file.getCanonicalPath());
		            } catch (IOException e1) {
		                e1.printStackTrace();
		            }
		        } else {
		            System.out.println("File does not exist!");
		        }
			}
		};
		
		save.addActionListener(saver);
		
		background = new JLabel();
		background.setText("Theme:");
		background.setHorizontalAlignment(JLabel.RIGHT);
		background.setBounds(200,500,150,50);
		background.setForeground(Color.white);
		background.setFont(new Font("",Font.PLAIN,20));
		add(background);
		
		dark = new JButton();
		dark.setText("dark");
		dark.setActionCommand(dark.getText());
		dark.setBounds(375,500,75,50);
		dark.setBackground(Color.black);
		dark.setForeground(Color.white);
		add(dark);
		
		light = new JButton();
		light.setText("light");
		light.setActionCommand(light.getText());
		light.setBounds(450,500,75,50);
		light.setBackground(Color.white);
		light.setForeground(Color.black);
		add(light);
		
		ActionListener themer = new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {

				JButton b = (JButton) e.getSource();
				
				theme=b.getActionCommand();
				if(theme.equals("light")) {
					setBackground(Color.LIGHT_GRAY);
					home.setBackground(Color.LIGHT_GRAY);
					fscheck.setBackground(Color.DARK_GRAY);
					fscheck.setForeground(Color.white);
					userfield.setBackground(Color.white);
					userfield.setForeground(Color.black);
					username.setForeground(Color.white);
					fullscreen.setForeground(Color.white);
					background.setForeground(Color.white);
					home.setForeground(Color.black);
					difficulty.setForeground(Color.white);
					if(easy.getBackground()==Color.DARK_GRAY) {
						easy.setBackground(Color.white);
					}
					easy.setForeground(Color.BLACK);
					if(medium.getBackground()==Color.DARK_GRAY) {
						medium.setBackground(Color.white);
					}
					medium.setForeground(Color.BLACK);
					if(hard.getBackground()==Color.DARK_GRAY) {
						hard.setBackground(Color.white);
					}
					hard.setForeground(Color.BLACK);
				}
				else {
					setBackground(Color.darkGray);
					home.setBackground(Color.darkGray);
					fscheck.setBackground(Color.LIGHT_GRAY);
					fscheck.setForeground(Color.black);
					userfield.setBackground(Color.DARK_GRAY);
					userfield.setForeground(Color.white);
					username.setForeground(Color.black);
					fullscreen.setForeground(Color.black);
					background.setForeground(Color.black);
					home.setForeground(Color.white);
					difficulty.setForeground(Color.black);
					if(easy.getBackground()==Color.white) {
						easy.setBackground(Color.darkGray);
					}
					easy.setForeground(Color.white);
					if(medium.getBackground()==Color.white) {
						medium.setBackground(Color.darkGray);
					}
					medium.setForeground(Color.white);
					if(hard.getBackground()==Color.white) {
						hard.setBackground(Color.darkGray);
					}
					hard.setForeground(Color.white);
				}
				if(seldiff.equals("easy")) {
					easy.setBackground(Color.green);
				}
				else if(seldiff.equals("medium")) {
					medium.setBackground(Color.orange);
				}
				else {
					hard.setBackground(Color.red);
				}
				
			}
		};
		
		dark.addActionListener(themer);
		light.addActionListener(themer);
		
		//theme
		if(theme.equals("dark")) {
			dark.doClick();
		}
		else {
			light.doClick();
		}
		
		
		//auto size
		addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
            	home.setBounds(0,0,convwidth(200),convheight(50));
            	username.setBounds(convwidth(200),convheight(200),convwidth(150),convheight(50));
            	userfield.setBounds(convwidth(375),convheight(200),convwidth(300),convheight(50));
            	difficulty.setBounds(convwidth(200),convheight(300),convwidth(150),convheight(50));
            	easy.setBounds(convwidth(375),convheight(300),convwidth(100),convheight(50));
        		medium.setBounds(convwidth(475),convheight(300),convwidth(100),convheight(50));
        		hard.setBounds(convwidth(575),convheight(300),convwidth(100),convheight(50));
        		fullscreen.setBounds(convwidth(200),convheight(400),convwidth(150),convheight(50));
        		fscheck.setBounds(convwidth(375),convheight(400),convwidth(100),convheight(50));
        		background.setBounds(convwidth(200),convheight(500),convwidth(150),convheight(50));
        		dark.setBounds(convwidth(375),convheight(500),convwidth(75),convheight(50));
        		light.setBounds(convwidth(450),convheight(500),convwidth(75),convheight(50));
        		save.setBounds(convwidth(375),convheight(625),convwidth(250),convheight(75));
            }
        });
		home.setBounds(0,0,convwidth(200),convheight(50));
    	username.setBounds(convwidth(200),convheight(200),convwidth(150),convheight(50));
    	userfield.setBounds(convwidth(375),convheight(200),convwidth(300),convheight(50));
    	difficulty.setBounds(convwidth(200),convheight(300),convwidth(150),convheight(50));
    	easy.setBounds(convwidth(375),convheight(300),convwidth(100),convheight(50));
		medium.setBounds(convwidth(475),convheight(300),convwidth(100),convheight(50));
		hard.setBounds(convwidth(575),convheight(300),convwidth(100),convheight(50));
		fullscreen.setBounds(convwidth(200),convheight(400),convwidth(150),convheight(50));
		fscheck.setBounds(convwidth(375),convheight(400),convwidth(100),convheight(50));
		background.setBounds(convwidth(200),convheight(500),convwidth(150),convheight(50));
		dark.setBounds(convwidth(375),convheight(500),convwidth(75),convheight(50));
		light.setBounds(convwidth(450),convheight(500),convwidth(75),convheight(50));
		save.setBounds(convwidth(375),convheight(625),convwidth(250),convheight(75));
	}
	
	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		if(theme.equals("dark")) {
			g.setColor(Color.lightGray);
		}
		else {
			g.setColor(Color.darkGray);
		}
		g.fillRect(convwidth(200),convheight(150),convwidth(600),convheight(600));
	}
	
	int convwidth(int size) {
		return (int) ((frame.getContentPane().getWidth()*size)/1000.0);
	}
	
	int convheight(int size) {
		return (int) ((frame.getContentPane().getHeight()*size)/900.0);
	}
	
	

}
